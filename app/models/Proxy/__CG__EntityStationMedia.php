<?php

namespace Proxy\__CG__\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class StationMedia extends \Entity\StationMedia implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

        return parent::__get($name);
    }

    /**
     * {@inheritDoc}
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

        return parent::__set($name, $value);
    }

    /**
     * {@inheritDoc}
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

        return parent::__isset($name);

    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'station_id', 'song_id', 'title', 'artist', 'album', 'isrc', 'length', 'length_text', 'path', 'mtime', 'fade_overlap', 'fade_in', 'fade_out', 'cue_in', 'cue_out', 'station', 'song', 'playlists'];
        }

        return ['__isInitialized__', 'id', 'station_id', 'song_id', 'title', 'artist', 'album', 'isrc', 'length', 'length_text', 'path', 'mtime', 'fade_overlap', 'fade_in', 'fade_out', 'cue_in', 'cue_out', 'station', 'song', 'playlists'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (StationMedia $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setLength($length)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLength', [$length]);

        return parent::setLength($length);
    }

    /**
     * {@inheritDoc}
     */
    public function getCalculatedLength()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCalculatedLength', []);

        return parent::getCalculatedLength();
    }

    /**
     * {@inheritDoc}
     */
    public function getFullPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullPath', []);

        return parent::getFullPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getAnnotations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnnotations', []);

        return parent::getAnnotations();
    }

    /**
     * {@inheritDoc}
     */
    public function loadFromFile($force = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'loadFromFile', [$force]);

        return parent::loadFromFile($force);
    }

    /**
     * {@inheritDoc}
     */
    public function writeToFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'writeToFile', []);

        return parent::writeToFile();
    }

    /**
     * {@inheritDoc}
     */
    public function moveToNotProcessed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'moveToNotProcessed', []);

        return parent::moveToNotProcessed();
    }

    /**
     * {@inheritDoc}
     */
    public function __call($method, $arguments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', [$method, $arguments]);

        return parent::__call($method, $arguments);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetExists($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetExists', [$offset]);

        return parent::offsetExists($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetSet($key, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetSet', [$key, $value]);

        return parent::offsetSet($key, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetGet($key)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetGet', [$key]);

        return parent::offsetGet($key);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetUnset($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetUnset', [$offset]);

        return parent::offsetUnset($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function fromArray(\Doctrine\ORM\EntityManager $em, $source)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'fromArray', [$em, $source]);

        return parent::fromArray($em, $source);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray(\Doctrine\ORM\EntityManager $em, $deep = false, $form_mode = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', [$em, $deep, $form_mode]);

        return parent::toArray($em, $deep, $form_mode);
    }

}
