<?php
$title = 'Submit Your Song';

$this->assets->collection('custom_js')
    ->addJs('vendor/uploadifive/jquery.uploadifive.min.js');

$this->assets->collection('custom_css')
    ->addCss('vendor/uploadifive/uploadifive.css');
?>

<h2>Guidelines for Song Submission</h2>

<p>On behalf of the Ponyville Live! family of stations, thank you for your interest in submitting your music to the Ponyville Live! network. We are happy to work with the amazingly talented musicians and other creative fans in this community, and we hope that by playing your music on our stations, we can help bring more attention to your work.</p>

<p>Just so we're on the same page, here are just a few guidelines about our music submission process and notes about what to expect once your song is submitted to our network:</p>

<dl>
    <dt>Only upload music you created yourself:</dt>
    <dd>This form is only for musicians themselves to upload their own content for playback on Ponyville Live! stations. Don't submit a song you found on YouTube or downloaded elsewhere.</dd>

    <dt>Stations may not add all music:</dt>
    <dd>Each station can use their own discretion when choosing to add a song submitted through this web site to their rotation. They may not find every song to be a great fit for their station's playlist. Don't take it personally!</dd>

    <dt>Submitting a song gives our stations permissions to play it:</dt>
    <dd>This should go without saying, but by submitting a song through this service, you are granting our radio stations a permanent license to play the song in their rotations. Radio stations only periodically stream music, and do not directly offer the files for listeners to download.</dd>
</dl>

<p>If you have any questions about this submission process, contact our team at <a href="mailto:pr@ponyvillelive.com">pr@ponyvillelive.com</a>. Thank you again for your submission!</p>

<form action="<?=$this->viewHelper->routeFromHere(array('action' => 'songconfirm')) ?>" method="post" class="form-stacked df-form" enctype="multipart/form-data">

    <input type="hidden" name="token" value="<?=$token ?>">

    <h2>Step 1: Upload File(s)</h2>
    <p>Click and drag or manually select the file(s) you would like to upload. You may upload up to 10 files at one time. Each file must meet the following qualifications:</p>
    <ul>
        <li>Must be an MP3 file;</li>
        <li>Must be under 20MB in size;</li>
        <li>Must have the "Title" and "Artist" in the file's metadata (ID3 tags); and</li>
        <li>Should have a bitrate of 128kbps or higher.</li>
    </ul>

    <div id="queue"></div>
    <input id="file_upload" name="file_upload" type="file" multiple="true">
    <input type="hidden" name="ignore_files" value="0">

    <br>
    <h2>Step 2: Select Station(s)</h2>
    <p>Choose one or more stations that you feel your music would be a good fit for. If you have multiple genres of music to upload, you can return to this page to upload another set of songs at any point.</p>

    <div class="clearfix control-group">
        <label for="stations[]" class="required">Select Station(s):</label>

        <ul class="inputs-list">
            <li>
            <? foreach($stations as $station_key => $station_text): ?>
                <label><input type="checkbox" name="stations[]" value="<?=$station_key ?>"> <span><?=$station_text ?></span></label>
            <? endforeach; ?>
            </li>
        </ul>
    </div>

    <div class="buttons">
        <button type="submit" class="btn-large primary">Submit Song(s) to Stations</button>
    </div>

</form>

<script type="text/javascript">
$(function() {
    if ($.fn.uploadifive)
    {
        $('input[name="ignore_files"]').val(1);
    }

    $('#file_upload').uploadifive({
        'auto': true,
        'fileType': 'audio/mpeg',
        'fileSizeLimit': '20MB',
        'queueID': 'queue',
        'uploadScript': '<?=$this->viewHelper->routeFromHere(array('action' => 'songupload', 'token' => $token)) ?>',
        'uploadLimit': 10,
        'onUploadComplete' : function(file, data) {
            var item = file.queueItem;

            if (data !== '1')
            {
                item.addClass('text-error');
                item.find('.fileinfo').html(' - <b>Error:</b> '+data);
            }
            else
            {
                item.addClass('text-success');
            }

            return false;
        }
    });
})
</script>